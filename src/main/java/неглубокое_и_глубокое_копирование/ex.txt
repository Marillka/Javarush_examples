Различия между поверхностным копированием и глубоким копированием
Давайте завершим эту статью, перечислив несколько основных различий между поверхностным и глубоким копированием объектов в Java:

Поверхностная копия — это побитовая копия объекта, и она отлично работает, если класс содержит только примитивы и неизменяемые поля. Но назначение полей за полем приведет к копированию ссылок (адресов памяти) на изменяемые поля/объекты. Глубокая копия создаст отдельную копию для каждого из изменяемых полей объекта и объектов, на которые ссылаются, а не ссылки на копируемые объекты.
Ссылочные объекты совместно используются в неглубокой копии. Таким образом, если один из объектов изменен, изменение будет видно в другом. С другой стороны, новые объекты создаются для любых объектов, на которые есть ссылки в глубокой копии. Таким образом, если один из объектов изменен, изменение НЕ будет видно в другом.
Глубокое копирование может быть во много раз медленнее поверхностного. Поверхностное копирование предполагает копирование только с одного уровня объекта, тогда как глубокое клонирование включает рекурсивное копирование всех изменяемых типов (включая несколько уровней), что может существенно повлиять на производительность.
Поверхностная копия предпочтительна, если объект состоит только из примитивных и неизменяемых полей. Глубокая копия является предпочтительным подходом по сравнению с поверхностной копией, когда в объекте присутствуют какие-либо объекты, на которые есть ссылки.
Глубокое копирование утомительно в реализации, подвержено ошибкам и сложно в обслуживании. Код необходимо модифицировать каждый раз, когда в поля класса вносятся какие-либо изменения, в отличие от реализации поверхностного копирования.
Реализация по умолчанию Object.clone() создает поверхностную копию объекта. Чтобы создать глубокую копию объекта, нам нужно изменить изменяемые поля объекта, возвращаемые super.clone() прежде чем вернуться к вызывающему абоненту.